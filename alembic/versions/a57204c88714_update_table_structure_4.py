"""update table structure 4

Revision ID: a57204c88714
Revises: 2d49121fd0d0
Create Date: 2025-04-17 09:13:29.120661

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a57204c88714'
down_revision: Union[str, None] = '2d49121fd0d0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_llms_id', table_name='llms')
    op.drop_table('llms')
    op.drop_index('ix_logs_action', table_name='logs')
    op.drop_index('ix_logs_id', table_name='logs')
    op.drop_table('logs')
    op.add_column('users', sa.Column('picture', sa.String(), nullable=True))
    op.add_column('users', sa.Column('is_google_auth', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'company_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'company_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'is_google_auth')
    op.drop_column('users', 'picture')
    op.create_table('logs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('action', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('details', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='logs_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='logs_pkey')
    )
    op.create_index('ix_logs_id', 'logs', ['id'], unique=False)
    op.create_index('ix_logs_action', 'logs', ['action'], unique=False)
    op.create_table('llms',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('provider', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('model', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('api_key', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('config', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='llms_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='llms_pkey')
    )
    op.create_index('ix_llms_id', 'llms', ['id'], unique=False)
    # ### end Alembic commands ###
